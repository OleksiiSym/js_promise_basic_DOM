{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAS,SAAS,aAAa,CAAC,OAChC,EAAU,EAAO,SAAS,CAAC,CAAA,GAC3B,EAAQ,EAAO,SAAS,CAAC,CAAA,EAE/B,CAAA,EAAQ,SAAS,CAAG,UACpB,EAAQ,SAAS,CAAG,wBAEpB,EAAM,SAAS,CAAG,wBAClB,EAAM,SAAS,CAAG,wBAElB,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,SACnB,EAAG,IACL,GAKA,SAAS,EAAS,CAAI,EACpB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CALA,EAAS,IAAI,CAAC,WAAM,OAAA,EAAS,EAAU,GAAA,KAAK,CAAC,WAAM,OAAA,EAAS,E,GAC5D,EAAS,IAAI,CAAC,WAAM,OAAA,EAAS,EAAU,GAAA,KAAK,CAAC,WAAM,OAAA,EAAS,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar logoE = document.querySelector(\".logo\");\nvar notifE = document.createElement(\"div\");\nvar success = notifE.cloneNode(true);\nvar error = notifE.cloneNode(true);\nsuccess.className = \"message\";\nsuccess.innerText = \"Promise was resolved!\";\nerror.className = \"message error-message\";\nerror.innerText = \"Promise was rejected!\";\nvar promise1 = new Promise(function(resolve) {\n    logoE.addEventListener(\"click\", function(e) {\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Error\"));\n    }, 3000);\n});\npromise1.then(function() {\n    return callback(success);\n}).catch(function() {\n    return callback(error);\n});\npromise2.then(function() {\n    return callback(success);\n}).catch(function() {\n    return callback(error);\n});\nfunction callback(elem) {\n    document.body.append(elem);\n}\n\n//# sourceMappingURL=index.bc6dc5f8.js.map\n","'use strict';\n\nconst logoE = document.querySelector('.logo');\nconst notifE = document.createElement('div');\nconst success = notifE.cloneNode(true);\nconst error = notifE.cloneNode(true);\n\nsuccess.className = 'message';\nsuccess.innerText = 'Promise was resolved!';\n\nerror.className = 'message error-message';\nerror.innerText = 'Promise was rejected!';\n\nconst promise1 = new Promise((resolve) => {\n  logoE.addEventListener('click', (e) => {\n    resolve();\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Error'));\n  }, 3000);\n});\n\npromise1.then(() => callback(success)).catch(() => callback(error));\npromise2.then(() => callback(success)).catch(() => callback(error));\n\nfunction callback(elem) {\n  document.body.append(elem);\n}\n"],"names":["logoE","document","querySelector","notifE","createElement","success","cloneNode","error","className","innerText","promise1","Promise","resolve","addEventListener","e","promise2","reject","setTimeout","Error","callback","elem","body","append","then","catch"],"version":3,"file":"index.bc6dc5f8.js.map"}